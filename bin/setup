#!/usr/bin/env bash

[[ -x bin/deps ]] && source bin/deps

[[ -z ${BashMatic} ]] && {
  echo "Failed to initialize BASH library."
  exit 1
}

function setup::gem::dependencies() {
  # abort on error
  run::set-all abort-on-error

  lib::gem::cache-refresh
  lib::gem::install rubocop
  lib::gem::install relaxed-rubocop
}

function setup::git::commit-hook() {
  [[ -L .git/hooks/pre-commit ]] || run "ln -nfs bin/pre-commit .git/hooks/pre-commit"
}

function setup::detect-bazel-version() {
  local version
  version="$(grep versions.check WORKSPACE | awk 'BEGIN{FS="\""}{print $2}')"
  [[ -z "${version}" && -f .bazelversion ]] && version="$(cat .bazelversion | tr -d '\n')"
  printf "%s" "${version}"
}

#——————————————————————————————  main ———————————————————————————————————————————

function setup::main() {
  setup::gem::dependencies
  [[ -z ${CI} ]] && setup::git::commit-hook

  local os=$(uname -s | tr '[:upper:]' '[:lower:]')
  local script

  script="./bin/setup-${os}"

  if [[ -x ${script} ]]; then
    "${script}" "$(setup::detect-bazel-version)"
  else
    echo "Operating system $(uname -s) is not currently supported." >&2
    return 1
  fi
}

setup::main "$@"

